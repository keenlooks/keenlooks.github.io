name: Update Claude Context and Worker

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  update-context:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          pip install beautifulsoup4 PyPDF2 python-frontmatter pyyaml requests

      - name: Generate context
        run: python content_extractor.py
        
      - name: Install Wrangler
        run: |
          npm install -g wrangler
          wrangler --version

      - name: Configure Wrangler
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          # Create wrangler.toml with direct configuration
          cat << EOF > wrangler.toml
          name = "flat-bread-e3e2"
          main = "worker.js"
          compatibility_date = "2024-03-26"
          account_id = "$CLOUDFLARE_ACCOUNT_ID"
          workers_dev = true

          [vars]
          ENVIRONMENT = "production"
          EOF

          # Set environment variables for Wrangler
          export CLOUDFLARE_ACCOUNT_ID=$CLOUDFLARE_ACCOUNT_ID
          export CLOUDFLARE_API_TOKEN=$CLOUDFLARE_API_TOKEN
          
          # Verify configuration
          echo "Testing Wrangler configuration..."
          wrangler whoami || true
          
      - name: Update and deploy Worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          # Export environment variables again for this step
          export CLOUDFLARE_ACCOUNT_ID=$CLOUDFLARE_ACCOUNT_ID
          export CLOUDFLARE_API_TOKEN=$CLOUDFLARE_API_TOKEN
          
          echo "Deploying worker..."
          python update_worker.py